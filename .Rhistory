1:6
die <- 1:6
die
ls()
ls()
die * die
round(3.14)
factorial(3)
mean(die)
round(mean(die))
sample(x = die, size = 1)
sample(x = die, size = 1)
sample(x = die, size = 1)
sample(x = die, size = 1)
sample(x = die, size = 1)
sample(x = die, size = 1)
sample(x = die, size = 1)
args(sample)
round(3.145, digits = 2)
sample(size = 1, x = die)
sample(x = die, size = 2)
sample(x = die, size = 2, replace = TRUE) # sample without replacement
dice <- sample(x = die, size = 2, replace = TRUE)
dice
sum(dice)
die  <- 1:6
dice <- sample(x = die, size = 2, replace = TRUE)
sum(dice)
roll <- function(){
die  <- 1:6
dice <- sample(x = die, size = 2, replace = TRUE)
sum(dice)
}
roll()
roll()
roll()
roll()
roll()
roll2(1:4)
# bones is now an argument in the function roll2 and needs to be provided
roll2 <- function(bones) {
dice <- sample(x = bones, size = 2, replace = TRUEE)
sum(dice)
}
roll2(1:4)
# bones is now an argument in the function roll2 and needs to be provided
roll2 <- function(bones) {
dice <- sample(x = bones, size = 2, replace = TRUE)
sum(dice)
}
roll2(1:4)
roll2(1:6)
roll2(1:20)
roll2()
# give bones argument at default value
roll2 <- function(bones = 1:6) {
dice <- sample(x = bones, size = 2, replace = TRUE)
sum(dice)
}
dice
roll2()
install.packages("ggplot2")
# chapter 2
# load package "ggplot2"
library("ggplot2")
qplot
# c stands for "concatenate" but think of it as "collect" or "combine"
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
x
y <- x^3
y
ggplot2::qplot(x = x, y = y)
x <- c(1, 2, 2, 2, 3, 3)
ggplot2::qplot(x = x, bandwidth = 1)
ggplot2::qplot(x = x, biwidth = 1)
ggplot2::qplot(x = x, binwidth = 1)
x2 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
ggplot2::qplot(x = x2, binwidth = 1)
x3 <- c(0, 1, 1, 2, 2, 2, 3, 3, 4)
ggplot2::qplot(x = x3, binwidth = 1)
#replicate function repeats R commands and stores the results in a vector
replicate(n = 3, 1+1)
replicate(n = 10, roll())
rolls <- replicate(n = 10000, roll())
ggplot2::qplot(x = rolls, binwidth = 1)
?sample
roll_weighted <- function() {
die  <- 1:6
dice <- sample(
x = die
,size = 2
,replace = TRUE
,prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
}
roll_weighted <- function() {
die  <- 1:6
dice <- sample(
x = die
,size = 2
,replace = TRUE
,prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
}
rolls <- replicate(n = 10000, roll_weighted())
ggplot2::qplot(x = rolls, binwidth = 1)
